apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: observability
spec:
  mode: deployment
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:
      batch: {}
      memory_limiter: {}
      resourcedetection:
        detectors: [env, system, k8s]
    exporters:
      # traces -> Tempo
      otlp/tempo:
        endpoint: tempo.observability.svc.cluster.local:4317
        tls:
          insecure: true
      # logs -> Loki
      loki:
        endpoint: http://loki-gateway.observability.svc.cluster.local/loki/api/v1/push
        labels:
          resource:
            k8s.namespace.name: "namespace"
            k8s.pod.name: "pod"
      # metrics exposed for Prometheus scrape
      prometheus:
        endpoint: 0.0.0.0:9464
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [otlp/tempo]
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [loki]
        metrics:
          receivers: [otlp]
          processors: [batch]
          exporters: [prometheus]
          
# Optional: let Prometheus discover the collector metrics endpoint
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: otel-collector
  namespace: observability
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: otel-collector
  endpoints:
    - port: metrics
      interval: 30s
